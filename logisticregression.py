# -*- coding: utf-8 -*-
"""LogisticRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CemI5SZqyBE331MzP2Ze_3fCw2DXQpZr
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import StandardScaler,OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import (
    confusion_matrix,
    accuracy_score,
    precision_score,
    recall_score,
    f1_score,
    roc_curve,
    auc
)

df = pd.read_csv('/content/college_student_placement_dataset.csv')
# df.info()
# print(df.head())

# print(df.isnull().sum)

df['Internship_Experience']=df['Internship_Experience'].map({'Yes':1,'No':0})

df['Placement'] = df['Placement'].map({'Yes':1,'No':0})

X = df.drop(['College_ID','Placement'],axis=1)
y = df['Placement']

sc = StandardScaler()
scaled_X = sc.fit_transform(X)

X_train,X_test,y_train,y_test = train_test_split(scaled_X,y,test_size=0.2,random_state=42)

model = LogisticRegression()
model.fit(X_train,y_train)

y_prob = model.predict_proba(X_test)[:,1]

threshold = 0.5
y_pred = (y_prob>=threshold).astype(int)

print("Accuary:",accuracy_score(y_test,y_pred))
print("Precision:",precision_score(y_test,y_pred))
print("Recall:",recall_score(y_test,y_pred))
print("F1 Score:",f1_score(y_test,y_pred))

cm = confusion_matrix(y_test,y_pred)
plt.figure(figsize=(6,4))
sns.heatmap(cm,annot=True,fmt='d',cmap='Blues')
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.title("Confusion Matrix")
plt.show()

fpr,tpr,thresholds = roc_curve(y_test,y_prob)
roc_auc=auc(fpr,tpr)

plt.figure(figsize=(6,4))
plt.plot(fpr,tpr,color='darkorange',lw=2,label='ROC curve (area = %0.2f)' % roc_auc)
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver Operating Characteristic')
plt.legend(loc="lower right")
plt.show()

print("auc_score ",roc_auc)